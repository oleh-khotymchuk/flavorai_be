generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  ADMIN
}

model User {
  id                String   @id @default(cuid())
  email             String   @unique
  password          String
  name              String?
  role              UserRole @default(USER)
  resetToken        String?
  resetTokenExpiry  DateTime?
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  recipes Recipe[]
  ratings Rating[]

  @@map("users")
}

model Recipe {
  id          String   @id @default(cuid())
  title       String
  description String?
  ingredients String   // JSON string or comma separated
  instructions String
  imageUrl    String?  // URL or base64 encoded image
  notes       String?  // Additional notes about the recipe
  cuisine     String?  // Cuisine type (e.g., Italian, Asian, Mexican)
  userId      String
  user        User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  ratings Rating[]

  @@map("recipes")
}

model Rating {
  id       String @id @default(cuid())
  recipeId String
  userId   String
  rating   Int
  createdAt DateTime @default(now())

  recipe Recipe @relation(fields: [recipeId], references: [id], onDelete: Cascade)
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([recipeId, userId])
  @@map("ratings")
}
